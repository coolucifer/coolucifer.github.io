webpackJsonp([1,4],{DTTZ:function(t,e,n){t.exports=n.p+"static/img/17-12-06-page-frame.9c16ecb.png"},VUa9:function(t,e){},b9or:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n("V8mf"),s=n.n(i),a=n("240R"),r=n("DTTZ"),_=n.n(r),v={name:"DecSixth",data:function(){return{Img:_.a,isIndex:!1,sidebarlists:[{name:"页面结构及数据存储",link:"#chapt1",src:"./static/img/attach.png"},{name:"任务的添加,删除与更新",link:"#chapt2",src:"./static/img/attach.png"},{name:"与localStorage对接",link:"#chapt3",src:"./static/img/attach.png"},{name:"组件化与EventBus",link:"#chapt4",src:"./static/img/attach.png"}]}},components:{},mounted:function(){s.a.highlightCode(),a.a.bus.$emit("isIndex",this.isIndex),a.a.bus.$emit("sidebarlists",this.sidebarlists)}},c={render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"shadowbox",attrs:{id:"blog"}},[n("ul",{staticClass:"pager"},[n("li",{staticClass:"previous"},[n("router-link",{attrs:{to:"/2017-11-29"}},[t._v("上一篇\n          "),n("span",{attrs:{"aria-hidden":"true"}},[t._v("←")])])],1),t._v(" "),n("li",{staticClass:"next"},[n("router-link",{attrs:{to:"/2017-12-12"}},[t._v("下一篇\n          "),n("span",{attrs:{"aria-hidden":"true"}},[t._v("→")])])],1)]),t._v(" "),n("h1",[t._v("Vue.js实战: 清单应用")]),t._v(" "),n("time",{attrs:{datetime:"2017-12-06"}},[t._v("2017-12-06")]),t._v(" "),n("div",{staticClass:"blog-content"},[t._m(0),t._v(" "),n("h3",{attrs:{id:"chapt1"}},[t._v("一.确定页面的基础结构及数据存储")]),t._v(" "),n("p",[t._v("做一个应用首先要确定页面的基础结构和样式,确定好各部件的上下级关系,比如标题,输入框,以及待办事项,已完成事项的位置.这里先用html建立一个大致的框架.")]),t._v(" "),n("img",{staticClass:"img-responsive center-block",attrs:{src:t.Img,alt:"页面框架"}}),t._v(" "),n("h3",{attrs:{id:"chapt2"}},[t._v("二.任务的添加,删除与更新")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),n("pre",[t._v(" methods: {\n  add: function () {\n    var title = this.current.title;\n    if(!title && title !== 0) return;  //验证输入框内容是否为空\n\n    var todo = Object.assign({},this.current);  //将数组合并\n    this.list.push(todo)\n  }\n }\n")]),t._v(" "),t._m(6),t._v(" "),n("p",[t._v("为了确认在submit的时候是进行添加还是进行更新,我们可以给merge()传入一个独特的任务id,当传入任务id的时候为更新,无参数的时候为添加.当确认进行更新时,我们首先要找到即将更新的那项任务")]),t._v(" "),n("pre",[t._v(' var is_update = this.current.id;\n if (is_update) {    //如果是添加\n  //.find()返回满足条件的第一个元素,这里是"item.id==is_update"\n  var index = this.find_index_by_id(id);\n  //vue中修改数组的方式\n  Vue.set(this.list,index,Object.assign({},this.current));\n }else{    //否则\n  ...\n },\n\n find_index_by_id: function (id) {\n  return this.list.findIndex(function (item) {  //返回符合要求的项的index\n    return item.id == id;\n  })\n },\n')]),t._v(" "),t._m(7),t._v(" "),n("pre",[t._v(" remove: function (id) {\n  var index = this.find_index_by_id(id);\n  //splice() 方法向/从数组中添加/删除项目，然后返回被删除的项目\n  //该方法会改变原始数组\n  this.list.splice(index,1);\n },\n")]),t._v(" "),n("h3",{attrs:{id:"chapt3"}},[t._v("三.localStorage与对接")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),n("p",[t._v("我们可以将localStorage封装到我们自己的js文件中,使其在项目中更方便的使用.")]),t._v(" "),n("pre",[t._v(" function () {\n window.ms = {  //将方法暴露出去\n  set: set,\n  get: get,\n };\n\n function set(key,val) {  //set()\n  localStorage.setItem(key,JSON.stringify(val));\n };\n\n function get(key) {  //get()\n  var json = localStorage.getItem(key);\n  if (json) {\n    return JSON.parse(json);\n  }\n }\n }")]),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),n("pre",[t._v(" mounted: function () {\n  this.list = ms.get('list') || this.list;\n },\n\n watch: {\n  //每次list发生变化的时候自动执行handler\n  list: {\n    deep: true, //无论list嵌套得有多深\n    handler: function (new_val,old_val) {\n      if (new_val) {\n        ms.set('list',new_val);\n      } else {\n        ms.set('list',[]);\n      }\n     }\n  }\n }\n")]),t._v(" "),n("h3",{attrs:{id:"chapt4"}},[t._v("四.组件化与EventBus")]),t._v(" "),n("p",[t._v("我们可以考虑将任务列表组件化,在本例中我们将未完成任务列表转化为一个Vue组件:")]),t._v(" "),n("pre",[t._v(" Vue.component('task',{\n  template: '#task-tpl',\n  props: ['todo'],\n  methods: {\n    action: function (name,params) {\n      //https://cn.vuejs.org/v2/api/#vm-on 事件触发\n      //this.$emit(\"自定义事件名\",要传送的数据)\n      //v-on:自定义事件名=\"在methods中的函数名\"\n      Event.$emit(name,params);\n    }\n  }\n })\n")]),t._v(" "),t._m(13),t._v(" "),n("pre",[t._v(" mounted: function () {\n   var me = this;\n   Event.$on('remove',function (id) {\n     if(id){\n       me.remove(id);\n     }\n   })\n }\n")]),t._v(" "),t._m(14)])])},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("今天我们来做一个Vue.js的清单应用,作为学习Vue.js的一个小练习,这里是"),e("a",{attrs:{href:"https://coolucifer.github.io/vue-list/index.html"}},[this._v("成品地址")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("清单应用的主要功能,就是任务的添加,删除与更新(传说中的增删改"),e("del",[this._v("没有查")]),this._v(").")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这是一个基于Vue.js的应用,当然要新建一个vue组件.组件中包含了"),e("code",[this._v("data:{}")]),this._v("用来存放数据,和"),e("code",[this._v("methods:{}")]),this._v("用来设置方法.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这里的数据分为两种类型: 输入框中正在输入的数据以及任务列表中的数据.正在输入的数据存储在data中的对象"),e("code",[this._v("current:{}")]),this._v("里,任务列表存放在数组"),e("code",[this._v("list:[]")]),this._v("里.")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("方法存放在"),n("code",[t._v("methods:{}")]),t._v("中,主要的功能有添加"),n("code",[t._v("add()")]),t._v(",删除"),n("code",[t._v("remove()")]),t._v("和更新"),n("code",[t._v("update()")]),t._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("通常来说,我们会在用户在输入框中输入回车"),e("kbd",[this._v("Enter")]),this._v("或者点击提交按钮的时候调用添加"),e("code",[this._v("add()")]),this._v(",因此可以在form中绑定事件"),e("code",[this._v('@submit.prevent="add"')]),this._v(",在表单提交的时候add()就可以将表单内容添加到数组list[]中.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("对条目进行修改,更新时我们可以调用update()方法,然而实际上更新和添加的实现过程大部分是一样的,因此可以将两个方法结合成一个"),e("code",[this._v("merge()")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("如果想删除数据,可以在用户点击按钮的时候调用"),e("code",[this._v("remove(todo.id)")]),this._v(",可以通过对数组进行.splice()来删除.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在设定好基础功能之后,下一个问题就是是数据的存储与交互.正常来说存储数据是需要数据库的支持的,由于这是纯前端项目不会涉及到数据库,我们可以使用前端的一种存储数据的方式"),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Storage/LocalStorage"}},[this._v("localStorage")]),this._v("来存放数据.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("localStorage主要是两个方法: "),e("code",[this._v("setItem()")]),this._v("和"),e("code",[this._v("getItem()")]),this._v(",分别用来创建和取值.它和sessionStorage的区别在于sessionStorage在关闭页面之后数据就会清空,而localStorage的数据不会在关闭页面之后清空.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("localStorage.setItem('myCat','Tom');  //添加数据")]),this._v(" "),e("p",[this._v('localStorage.getItem("myCat");  //读取数据')]),this._v(" "),e("p",[this._v('localStorage.removeItem("myCat");  //删除数据')])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这样在其他文件里调用方法的时候可以直接使用"),e("code",[this._v("var task = ms.get('task');")]),this._v("来获取数据了.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("接着是与localStorage的对接.在挂载时("),e("code",[this._v("mounted:")]),this._v(")我们要使用get()方法取出localStorage中的数据,并且在list[]有变动时,我们都要使用set()方法将它保存到localStorage里,我们可以通过Vue的侦听器("),e("code",[this._v("watch:")]),this._v(")来监测list[]是否有变化.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这里我们使用了Event作为一个事件的调度中心:"),e("code",[this._v("var Event = new Vue();")]),this._v(",用来进行子组件与父组件之间的通信.这时我们要在子组件里触发一个事件"),e("code",[this._v("Event.$emit(name,params);")]),this._v(",从而可以在父级组件中监控事件.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("同时在组件中的按钮绑定的点击事件也要改为"),e("code",[this._v("@click=\"action('remove',todo.id)\"")])])}]};var o=n("VU/8")(v,c,!1,function(t){n("VUa9")},"data-v-153b2118",null);e.default=o.exports},"kFz+":function(t,e){},nEdk:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i={name:"Test",data:function(){return{BlogList:[{title:"666",date:"777"}]}},components:{SixSixSix:n("b9or").default}},s={render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"test"},[e("six-six-six")],1)},staticRenderFns:[]};var a=n("VU/8")(i,s,!1,function(t){n("kFz+")},"data-v-a66b7f88",null);e.default=a.exports}});
//# sourceMappingURL=1.78af59a7f84c8524c5ff.js.map