{"version":3,"sources":["webpack:///src/pages/BlogPages/2017-11-29.vue","webpack:///./src/pages/BlogPages/2017-11-29.vue?07fb","webpack:///./src/pages/BlogPages/2017-11-29.vue"],"names":["_017_11_29","highlightCode","isIndex","sidebarlists","BlogPages_2017_11_29","render","_h","this","$createElement","_c","_self","staticClass","attrs","id","to","_v","aria-hidden","datetime","_m","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"+JAoGAA,QAGA,kDAGA,yDAMAC,6CACAC,2CACAC,gBC/GAC,GADiBC,OAFjB,WAA0B,IAAaC,EAAbC,KAAaC,eAA0BC,EAAvCF,KAAuCG,MAAAD,IAAAH,EAAwB,OAAAG,EAAA,OAAiBE,YAAA,YAAAC,OAA+BC,GAAA,UAAaJ,EAAA,MAAWE,YAAA,UAAoBF,EAAA,MAAWE,YAAA,aAAuBF,EAAA,eAAoBG,OAAOE,GAAA,iBAAxNP,KAA4OQ,GAAA,mBAAAN,EAAA,QAAuCG,OAAOI,cAAA,UAA1RT,KAAgTQ,GAAA,aAAhTR,KAAgTQ,GAAA,KAAAN,EAAA,MAA2CE,YAAA,SAAmBF,EAAA,eAAoBG,OAAOE,GAAA,iBAAzYP,KAA6ZQ,GAAA,mBAAAN,EAAA,QAAuCG,OAAOI,cAAA,UAA3cT,KAAieQ,GAAA,eAAjeR,KAAieQ,GAAA,KAAAN,EAAA,MAAjeF,KAAieQ,GAAA,uBAAjeR,KAAieQ,GAAA,KAAAN,EAAA,QAAkGG,OAAOK,SAAA,gBAA1kBV,KAAmmBQ,GAAA,gBAAnmBR,KAAmmBQ,GAAA,KAAnmBR,KAAmmBW,GAAA,MAE5mBC,iBADjB,WAAoC,IAAab,EAAbC,KAAaC,eAA0BC,EAAvCF,KAAuCG,MAAAD,IAAAH,EAAwB,OAAAG,EAAA,OAAiBE,YAAA,iBAA2BF,EAAA,KAA3GF,KAA2GQ,GAAA,8CAA3GR,KAA2GQ,GAAA,KAAAN,EAAA,KAA3GF,KAA2GQ,GAAA,oCAAAN,EAAA,QAA3GF,KAA2GQ,GAAA,wBAA3GR,KAA2GQ,GAAA,6BAAAN,EAAA,QAA3GF,KAA2GQ,GAAA,+BAA3GR,KAA2GQ,GAAA,aAA3GR,KAA2GQ,GAAA,KAAAN,EAAA,OAA3GF,KAA2GQ,GAAA,2FAA3GR,KAA6eQ,GAAA,KAAAN,EAAA,KAA7eF,KAA6eQ,GAAA,uCAAAN,EAAA,QAA7eF,KAA6eQ,GAAA,wBAA7eR,KAA6eQ,GAAA,YAAAN,EAAA,QAA7eF,KAA6eQ,GAAA,oBAA7eR,KAA6eQ,GAAA,OAA7eR,KAA6eQ,GAAA,KAAAN,EAAA,OAA7eF,KAA6eQ,GAAA,6IAA7eR,KAA40BQ,GAAA,KAAAN,EAAA,KAA50BF,KAA40BQ,GAAA,qBAAAN,EAAA,QAA50BF,KAA40BQ,GAAA,qCAA50BR,KAA40BQ,GAAA,kBAA50BR,KAA40BQ,GAAA,KAAAN,EAAA,OAA50BF,KAA40BQ,GAAA,kHAA50BR,KAA6lCQ,GAAA,KAAAN,EAAA,KAA7lCF,KAA6lCQ,GAAA,aAAAN,EAAA,QAA7lCF,KAA6lCQ,GAAA,gBAA7lCR,KAA6lCQ,GAAA,kBAA7lCR,KAA6lCQ,GAAA,KAAAN,EAAA,OAA7lCF,KAA6lCQ,GAAA,4kBAA7lCR,KAAyyDQ,GAAA,KAAAN,EAAA,KAAzyDF,KAAyyDQ,GAAA,4DAAAN,EAAA,QAAzyDF,KAAyyDQ,GAAA,cAAzyDR,KAAyyDQ,GAAA,gCAAzyDR,KAAyyDQ,GAAA,KAAAN,EAAA,OAAzyDF,KAAyyDQ,GAAA,8NAAzyDR,KAAksEQ,GAAA,KAAAN,EAAA,KAAlsEF,KAAksEQ,GAAA,2BAAlsER,KAAksEQ,GAAA,KAAAN,EAAA,OAAlsEF,KAAksEQ,GAAA,oUAAlsER,KAAwlFQ,GAAA,KAAAN,EAAA,KAAxlFF,KAAwlFQ,GAAA,uBCE5nF,IAcAK,EAdAC,EAAA,OAcAC,CACAtB,EACAI,GATA,EAVA,SAAAmB,GACAF,EAAA,SAaA,kBAEA,MAUAG,EAAA,QAAAJ,EAAA","file":"static/js/8.3663b18eb92f871d13be.js","sourcesContent":["<template>\r\n  <div id=\"blog\" class=\"shadowbox\">\r\n    <ul class=\"pager\">\r\n      <li class=\"previous\">\r\n        <router-link to=\"/2017-11-26\">上一篇\r\n          <span aria-hidden=\"true\">&larr;</span>\r\n        </router-link>\r\n      </li>\r\n      <li class=\"next\">\r\n        <router-link to=\"/2017-12-06\">下一篇\r\n          <span aria-hidden=\"true\">&rarr;</span>\r\n        </router-link>\r\n      </li>\r\n    </ul>\r\n    <h1>jQuery实战: 表单验证(下)</h1>\r\n    <time datetime=\"2017-11-29\">2017-11-29</time>\r\n    <div class=\"blog-content\">\r\n      <p>上次我们讲到了如何为表单验证制定规则以及对规则的处理,之后就到了规则的验证阶段.</p>\r\n      <p>表单验证的第二步就是规则验证,这里会使用构造器来创建一个构造函数<code>window.Validator()</code>,这样就可以使每一个input在blur的时候执行<code>this.validator.is_valid()</code>来验证内容了.</p>\r\n      <pre>\r\n //传入input中的内容以及data-rule\r\n window.Validator = function (val,rule) {\r\n ... //验证\r\n }\r\n</pre>\r\n      <p>对于每个单独的规则,可以在validator中创建对应的验证函数.比如<code>data-rule=\"max:10\"</code>,可以创建对应的<code>validate_max()</code>:</p>\r\n      <pre>\r\n this.validate_max = function () {\r\n  val = parseFloat(val);  //将传进来的val转换成数字类型\r\n  return val <= rule.max;  //符合则返回true,否则返回false\r\n }\r\n</pre>\r\n      <p>当data-rule是正则表达式(<code>data-rule=\"pattern:^[a-z0-9]*$\"</code>)时,对应的验证函数为:</p>\r\n      <pre>\r\n this.validate_pattern = function () {\r\n  var reg = new RegExp(rule.pattern);\r\n  return reg.test(val);\r\n }\r\n</pre>\r\n      <p>有一个总的验证函数<code>is_valid()</code>来确定内容是否符合要求:</p>\r\n      <pre>\r\n this.is_valid = function (new_val) {  //这里的new_val是用户输入的val\r\n  if (new_val !== undefined) {\r\n    val = new_val;\r\n  }\r\n  // if(new_val)\r\n  // val = new_val;            \r\n  var key; //key是rule{}里的'max'或'min'等            \r\n  // 先验证是否为必填项,若不是必填项且用户未填写内容则直接判定为合法\r\n  if (!rule.required && !val) {\r\n    return true;\r\n  }            \r\n  for (key in rule) {  //对rule{}中的每一项进行检测\r\n    // 防止重复检测\r\n    if (key === 'required')\r\n      continue;\r\n    // 调用rule中相对应的方法\r\n    var r = this['validate_' + key](); //this.validate_max()\r\n    if (!r) return false;  //若验证不通过直接返回\r\n  }\r\n  return true;\r\n }\r\n</pre>\r\n      <p>这样表单验证的验证函数部分就完成了,下一步就是将每个input和validator绑定起来,这里设立一个监听函数<code>listen()</code>,当每一个input失去焦点(blur)的时候执行:</p>\r\n      <pre>\r\n function listen() {\r\n  $ele.on('blur',function () {\r\n    var valid = me.validator.is_valid(me.get_val());  //获取输入框内的值\r\n    if (valid)\r\n      $error_ele.hide();  //错误提示\r\n    else\r\n      $error_ele.show();\r\n  })\r\n }\r\n</pre>\r\n      <p>最后在整个表单提交的时候进行一个总的验证:</p>\r\n      <pre>\r\n //在表单提交的时候进行验证\r\n $form.on('submit',function(event){\r\n  event.preventDefault();  //防止刷新\r\n  $inputs.trigger('blur');\r\n  for(var i = 0; i < inputs.length; i ++){\r\n    var item = inputs[i];\r\n    var r = item.validator.is_valid();\r\n    if(!r){\r\n      alert('invalid');\r\n      return;\r\n    }\r\n  }\r\n  alert('valid!');\r\n })\r\n</pre>\r\n      <p>这样,表单验证就完成了.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport hljs from 'highlight.js'\r\nimport Bus from '@/Bus.js'\r\n\r\nexport default {\r\n  name: 'NovTwentiyNinth',\r\n\r\n  data () {\r\n    return {\r\n      isIndex: false,\r\n      sidebarlists: []\r\n    }\r\n  },\r\n  components: {},\r\n  mounted () {\r\n    hljs.highlightCode()\r\n    Bus.bus.$emit('isIndex', this.isIndex)\r\n    Bus.bus.$emit('sidebarlists', this.sidebarlists)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/BlogPages/2017-11-29.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"shadowbox\",attrs:{\"id\":\"blog\"}},[_c('ul',{staticClass:\"pager\"},[_c('li',{staticClass:\"previous\"},[_c('router-link',{attrs:{\"to\":\"/2017-11-26\"}},[_vm._v(\"上一篇\\n          \"),_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"←\")])])],1),_vm._v(\" \"),_c('li',{staticClass:\"next\"},[_c('router-link',{attrs:{\"to\":\"/2017-12-06\"}},[_vm._v(\"下一篇\\n          \"),_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"→\")])])],1)]),_vm._v(\" \"),_c('h1',[_vm._v(\"jQuery实战: 表单验证(下)\")]),_vm._v(\" \"),_c('time',{attrs:{\"datetime\":\"2017-11-29\"}},[_vm._v(\"2017-11-29\")]),_vm._v(\" \"),_vm._m(0)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"blog-content\"},[_c('p',[_vm._v(\"上次我们讲到了如何为表单验证制定规则以及对规则的处理,之后就到了规则的验证阶段.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"表单验证的第二步就是规则验证,这里会使用构造器来创建一个构造函数\"),_c('code',[_vm._v(\"window.Validator()\")]),_vm._v(\",这样就可以使每一个input在blur的时候执行\"),_c('code',[_vm._v(\"this.validator.is_valid()\")]),_vm._v(\"来验证内容了.\")]),_vm._v(\" \"),_c('pre',[_vm._v(\" //传入input中的内容以及data-rule\\n window.Validator = function (val,rule) {\\n ... //验证\\n }\\n\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对于每个单独的规则,可以在validator中创建对应的验证函数.比如\"),_c('code',[_vm._v(\"data-rule=\\\"max:10\\\"\")]),_vm._v(\",可以创建对应的\"),_c('code',[_vm._v(\"validate_max()\")]),_vm._v(\":\")]),_vm._v(\" \"),_c('pre',[_vm._v(\" this.validate_max = function () {\\n  val = parseFloat(val);  //将传进来的val转换成数字类型\\n  return val <= rule.max;  //符合则返回true,否则返回false\\n }\\n\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当data-rule是正则表达式(\"),_c('code',[_vm._v(\"data-rule=\\\"pattern:^[a-z0-9]*$\\\"\")]),_vm._v(\")时,对应的验证函数为:\")]),_vm._v(\" \"),_c('pre',[_vm._v(\" this.validate_pattern = function () {\\n  var reg = new RegExp(rule.pattern);\\n  return reg.test(val);\\n }\\n\")]),_vm._v(\" \"),_c('p',[_vm._v(\"有一个总的验证函数\"),_c('code',[_vm._v(\"is_valid()\")]),_vm._v(\"来确定内容是否符合要求:\")]),_vm._v(\" \"),_c('pre',[_vm._v(\" this.is_valid = function (new_val) {  //这里的new_val是用户输入的val\\n  if (new_val !== undefined) {\\n    val = new_val;\\n  }\\n  // if(new_val)\\n  // val = new_val;            \\n  var key; //key是rule{}里的'max'或'min'等            \\n  // 先验证是否为必填项,若不是必填项且用户未填写内容则直接判定为合法\\n  if (!rule.required && !val) {\\n    return true;\\n  }            \\n  for (key in rule) {  //对rule{}中的每一项进行检测\\n    // 防止重复检测\\n    if (key === 'required')\\n      continue;\\n    // 调用rule中相对应的方法\\n    var r = this['validate_' + key](); //this.validate_max()\\n    if (!r) return false;  //若验证不通过直接返回\\n  }\\n  return true;\\n }\\n\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这样表单验证的验证函数部分就完成了,下一步就是将每个input和validator绑定起来,这里设立一个监听函数\"),_c('code',[_vm._v(\"listen()\")]),_vm._v(\",当每一个input失去焦点(blur)的时候执行:\")]),_vm._v(\" \"),_c('pre',[_vm._v(\" function listen() {\\n  $ele.on('blur',function () {\\n    var valid = me.validator.is_valid(me.get_val());  //获取输入框内的值\\n    if (valid)\\n      $error_ele.hide();  //错误提示\\n    else\\n      $error_ele.show();\\n  })\\n }\\n\")]),_vm._v(\" \"),_c('p',[_vm._v(\"最后在整个表单提交的时候进行一个总的验证:\")]),_vm._v(\" \"),_c('pre',[_vm._v(\" //在表单提交的时候进行验证\\n $form.on('submit',function(event){\\n  event.preventDefault();  //防止刷新\\n  $inputs.trigger('blur');\\n  for(var i = 0; i < inputs.length; i ++){\\n    var item = inputs[i];\\n    var r = item.validator.is_valid();\\n    if(!r){\\n      alert('invalid');\\n      return;\\n    }\\n  }\\n  alert('valid!');\\n })\\n\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这样,表单验证就完成了.\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-116c560c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/BlogPages/2017-11-29.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-116c560c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./2017-11-29.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./2017-11-29.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./2017-11-29.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-116c560c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./2017-11-29.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-116c560c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/BlogPages/2017-11-29.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}